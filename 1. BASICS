/*
---IN TERMINAL---

clang(name of complier) (followed by name of file): clang testing.c---> this will show machine language which is unreadable on a seperate file 
./ (followed by file name) --> this runs the file 
ls--> list 
rm--> remove 
-o --> output file 
-w --> warning

---TO COMPILE--- compiler- changes human readable code into machine readable code

specify -o (followed by file name)--> [clang testing.c -o testing]
---TO RUN CODE--- 
./ (followed by file name) --> this runs the file[./testing.c]

---VARIABLES---
declaring a variable 
int x;
assigning a variable 
x = 5;
%(Conversion character that tells the code that its a placeholder
for the first element that fits that placeholder after the comma
printf(%d,x)

---things to note---

variables are mutable means can be changed overtime 
int x = 3;
call x, prints 3
x = 5;
call x, prints 5
there are certain keywords which cannot be used as variable names 
special keywords for the language eg .void
int void = 3; is not possible
name of variable called identifiers 

---DATA TYPES--
2 more data types 
double --> decimal places (%f)
char --> single charater (%c)

ASCII code is anything readable in english 
internally all characters are represented by a number 
any other human languages will not be covered 
printf("%d",'A')--> prints out 65 which is the number in the ASCII code 

converting characters through ASCII code
by printf("%d,'a' -'A')-->prints 32 as the difference is 32 
so to convert any character to a capital or small letter 
for example T --> t 
printf("%c \n" , 'T' + ('a' - 'A'));

---SIZES---
---ARITHMATIC OPERATIONS---
---ASSOCIATIVITY AND PRECEDENCE---
1. () > /* > +- > =
2. left to right (presedence)
3. right to left (associativity)
---INCREMENT & DECREMENT---
add and subtract 1 
x+= --> x = x + 1(<operand> + <operand>)
x++ --> x+1 
++x and x++ no diff 

---READING FROM CONSOLE---
printf(%p, &n)to get memory container and location 
scanf gets inout from user/terminal 
scanf(%d,&x);
*taken note dont use \n when using scanf*

eg 
int x;-------> declares variable
printf("enter value:");----> prints this readbility

scanf("%d", &x);----> gets the memory location of x which is given by user  
printf("%d \n", 2 * x);-----> store values and * 2 

---ESCAPE SEQUENCE---
\t---> tab 
\n---> next line 
\ escape sequence disables special meaning 

*/
